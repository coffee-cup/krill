#
# Krill Standard Library
#

# Functions

id = x -> x
const x y -> x

compose = f g -> f . g

assert = expected received -> {
  if expected != received then {
    throwError $ (toString expected) ++ " does not equal " ++ (toString received)
  } else ()
}

# Lists

reduce = foldl

filter = p -> reduce (acc curr -> {
  if (p curr) then (acc ++ [curr])
  else acc
}) []

sum = reduce (acc curr -> acc + curr) 0
product = reduce (acc curr -> acc * curr) 1

flatten = reduce (flat toFlatten -> {
  if (isList toFlatten) then flat ++ flatten(toFlatten)
  else flat ++ [toFlatten]
}) []

# Strings

lines = split "\n"
words = xs -> filter (x -> x != "") $ split " " xs

# Math

pow = x n -> {
  if n == 1 then x
  else x * (pow x (n - 1))
}

